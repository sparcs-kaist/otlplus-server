generator client {
  provider = "prisma-client-js"
}

generator prismaClassGenerator {
  provider = "prisma-class-generator"
  dryRun   = false
  output   = "./generated/prisma-class"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique(map: "name") @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]
}

model auth_group_permissions {
  id              Int             @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onUpdate: Restrict, map: "auth_group__permission_id_1f49ccbbdc69d2fc_fk_auth_permission_id")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onUpdate: Restrict, map: "auth_group_permission_group_id_689710a9a73b7457_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "group_id")
  @@index([permission_id], map: "auth_group__permission_id_1f49ccbbdc69d2fc_fk_auth_permission_id")
}

model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onUpdate: Restrict, map: "auth__content_type_id_508cf46651277a81_fk_django_content_type_id")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "content_type_id")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.DateTime(0)
  is_superuser               Boolean
  username                   String                       @unique(map: "username") @db.VarChar(150)
  first_name                 String                       @db.VarChar(30)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.DateTime(0)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]
}

model auth_user_groups {
  id         Int        @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onUpdate: Restrict, map: "auth_user_groups_group_id_33ac548dcf5f8e37_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "auth_user_groups_user_id_4b5ed4ffdb8fd9b0_fk_auth_user_id")

  @@unique([user_id, group_id], map: "user_id")
  @@index([group_id], map: "auth_user_groups_group_id_33ac548dcf5f8e37_fk_auth_group_id")
}

model auth_user_user_permissions {
  id              Int             @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onUpdate: Restrict, map: "auth_user_u_permission_id_384b62483d7071f0_fk_auth_permission_id")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "auth_user_user_permissi_user_id_7f0938558328534a_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "user_id")
  @@index([permission_id], map: "auth_user_u_permission_id_384b62483d7071f0_fk_auth_permission_id")
}

model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.DateTime(0)
  object_id           String?              @db.LongText
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.UnsignedSmallInt
  change_message      String               @db.LongText
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "djang_content_type_id_697914295151027a_fk_django_content_type_id")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "django_admin_log_user_id_52fdd58701c5f563_fk_auth_user_id")

  @@index([content_type_id], map: "djang_content_type_id_697914295151027a_fk_django_content_type_id")
  @@index([user_id], map: "django_admin_log_user_id_52fdd58701c5f563_fk_auth_user_id")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_45f3b1d93ec8c61c_uniq")
}

model django_migrations {
  id      Int      @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.DateTime(0)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String   @db.LongText
  expire_date  DateTime @db.DateTime(0)

  @@index([expire_date], map: "django_session_de54fa62")
}

model main_famoushumanityreviewdailyfeed {
  id                                         Int                                          @id @default(autoincrement())
  date                                       DateTime                                     @unique(map: "main_famoushumanityreviewdailyfeed_date_0fbb607a_uniq") @db.Date
  priority                                   Float
  visible                                    Boolean
  main_famoushumanityreviewdailyfeed_reviews main_famoushumanityreviewdailyfeed_reviews[]
}

model main_famoushumanityreviewdailyfeed_reviews {
  id                                 Int                                @id @default(autoincrement())
  famoushumanityreviewdailyfeed_id   Int
  review_id                          Int
  main_famoushumanityreviewdailyfeed main_famoushumanityreviewdailyfeed @relation(fields: [famoushumanityreviewdailyfeed_id], references: [id], onUpdate: Restrict, map: "e567529fdfd543a96610b342fea2bb84")
  review_review                      review_review                      @relation(fields: [review_id], references: [id], onUpdate: Restrict, map: "main_famoushumanityreview_review_id_f305d8aa_fk_review_review_id")

  @@unique([famoushumanityreviewdailyfeed_id, review_id], map: "main_famoushumani_famoushumanityreviewdailyfeed_id_97def4df_uniq")
  @@index([review_id], map: "main_famoushumanityreview_review_id_f305d8aa_fk_review_review_id")
}

model main_famousmajorreviewdailyfeed {
  id                                      Int                                       @id @default(autoincrement())
  date                                    DateTime                                  @db.Date
  priority                                Float
  department_id                           Int
  visible                                 Boolean
  subject_department                      subject_department                        @relation(fields: [department_id], references: [id], onUpdate: Restrict, map: "main_famousmajorrevi_department_id_a0a5a3a5_fk_subject_d")
  main_famousmajorreviewdailyfeed_reviews main_famousmajorreviewdailyfeed_reviews[]

  @@unique([date, department_id], map: "main_famousreviewdailyfeed_date_94cf00dd_uniq")
  @@index([department_id], map: "main_famousmajorrevi_department_id_a0a5a3a5_fk_subject_d")
}

model main_famousmajorreviewdailyfeed_reviews {
  id                              Int                             @id @default(autoincrement())
  famousmajorreviewdailyfeed_id   Int
  review_id                       Int
  main_famousmajorreviewdailyfeed main_famousmajorreviewdailyfeed @relation(fields: [famousmajorreviewdailyfeed_id], references: [id], onUpdate: Restrict, map: "D122ed8a8adef1dafa8cd66f142ebb40")
  review_review                   review_review                   @relation(fields: [review_id], references: [id], onUpdate: Restrict, map: "main_famousmajorreviewdai_review_id_c0d3bbec_fk_review_review_id")

  @@unique([famousmajorreviewdailyfeed_id, review_id], map: "main_famousreviewdailyfee_famousreviewdailyfeed_id_12d71d0b_uniq")
  @@index([review_id], map: "main_famousmajorreviewdai_review_id_c0d3bbec_fk_review_review_id")
}

model main_rankedreviewdailyfeed {
  id               Int               @id @default(autoincrement())
  date             DateTime          @unique(map: "main_rankedreviewdailyfeed_date_635bca2a_uniq") @db.Date
  priority         Float
  visible          Boolean
  semester_id      Int?
  subject_semester subject_semester? @relation(fields: [semester_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "main_rankedreviewdai_semester_id_f71e3a66_fk_subject_s")

  @@index([semester_id], map: "main_rankedreviewdai_semester_id_f71e3a66_fk_subject_s")
}

model main_ratedailyuserfeed {
  id                  Int                 @id @default(autoincrement())
  date                DateTime            @db.Date
  priority            Float
  visible             Boolean
  user_id             Int
  session_userprofile session_userprofile @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "main_ratedailyuserfe_user_id_31a534d5_fk_session_u")

  @@unique([date, user_id], map: "main_ratedailyuserfeed_date_user_id_4142794f_uniq")
  @@index([user_id], map: "main_ratedailyuserfe_user_id_31a534d5_fk_session_u")
}

model main_relatedcoursedailyuserfeed {
  id                  Int                 @id @default(autoincrement())
  date                DateTime            @db.Date
  priority            Float
  course_id           Int
  user_id             Int
  visible             Boolean
  subject_course      subject_course      @relation(fields: [course_id], references: [id], onUpdate: Restrict, map: "main_relatedcourseda_course_id_129fc5e2_fk_subject_c")
  session_userprofile session_userprofile @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "main_relatedcoursedai_user_id_a1be2390_fk_session_userprofile_id")

  @@unique([date, user_id], map: "main_relatedcoursedailyuserfeed_date_6043d8bb_uniq")
  @@index([course_id], map: "main_relatedcourseda_course_id_129fc5e2_fk_subject_c")
  @@index([user_id], map: "main_relatedcoursedai_user_id_a1be2390_fk_session_userprofile_id")
}

model main_reviewwritedailyuserfeed {
  id                  Int                 @id @default(autoincrement())
  date                DateTime            @db.Date
  priority            Float
  lecture_id          Int
  user_id             Int
  visible             Boolean
  subject_lecture     subject_lecture     @relation(fields: [lecture_id], references: [id], onUpdate: Restrict, map: "main_reviewwritedail_lecture_id_75ed0f87_fk_subject_l")
  session_userprofile session_userprofile @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "main_reviewwritedaily_user_id_9ffd0881_fk_session_userprofile_id")

  @@unique([date, user_id], map: "main_reviewwritedailyuserfeed_date_1e7bc6d7_uniq")
  @@index([lecture_id], map: "main_reviewwritedail_lecture_id_75ed0f87_fk_subject_l")
  @@index([user_id], map: "main_reviewwritedaily_user_id_9ffd0881_fk_session_userprofile_id")
}

model review_humanitybestreview {
  review_id Int @id
}

model review_majorbestreview {
  review_id Int @id
}

model review_review {
  id                                         Int                                          @id @default(autoincrement())
  course_id                                  Int
  lecture_id                                 Int
  content                                    String                                       @db.MediumText
  grade                                      Int                                          @db.SmallInt
  load                                       Int                                          @db.SmallInt
  speech                                     Int                                          @db.SmallInt
  writer_id                                  Int?
  writer_label                               String                                       @db.VarChar(200)
  updated_datetime                           DateTime                                     @db.DateTime(0)
  like                                       Int
  is_deleted                                 Int
  written_datetime                           DateTime?                                    @db.DateTime(0)
  main_famoushumanityreviewdailyfeed_reviews main_famoushumanityreviewdailyfeed_reviews[]
  main_famousmajorreviewdailyfeed_reviews    main_famousmajorreviewdailyfeed_reviews[]
  writer                                     session_userprofile?                         @relation(fields: [writer_id], references: [id], onUpdate: Restrict)

  @@unique([writer_id, lecture_id], map: "review_comment_writer_id_af700a5d_uniq")
  @@index([written_datetime], map: "review_comment_e5e30a4a")
}

model review_reviewvote {
  id               Int       @id @default(autoincrement())
  review_id        Int
  userprofile_id   Int?
  created_datetime DateTime? @db.DateTime(6)

  @@unique([review_id, userprofile_id], map: "review_commentvote_comment_id_e4594aea_uniq")
  @@index([created_datetime], map: "review_reviewvote_created_datetime_450f85e2")
}

model session_userprofile {
  id                                    Int                                        @id @default(autoincrement())
  student_id                            String                                     @db.VarChar(10)
  sid                                   String                                     @db.VarChar(30)
  department_id                         Int?
  email                                 String?                                    @db.VarChar(255)
  date_joined                           DateTime                                   @db.DateTime(0)
  first_name                            String                                     @db.VarChar(30)
  last_name                             String                                     @db.VarChar(150)
  refresh_token                         String?                                    @db.VarChar(255)
  main_ratedailyuserfeed                main_ratedailyuserfeed[]
  main_relatedcoursedailyuserfeed       main_relatedcoursedailyuserfeed[]
  main_reviewwritedailyuserfeed         main_reviewwritedailyuserfeed[]
  planner_planner                       planner_planner[]
  reviews                               review_review[]
  department                            subject_department?                        @relation(fields: [department_id], references: [id], onUpdate: Restrict)
  favorite_departments                  session_userprofile_favorite_departments[]
  session_userprofile_majors            session_userprofile_majors[]
  session_userprofile_minors            session_userprofile_minors[]
  session_userprofile_specialized_major session_userprofile_specialized_major[]
  taken_lectures                        session_userprofile_taken_lectures[]
  subject_courseuser                    subject_courseuser[]
  support_rate                          support_rate[]
  timetable_timetable                   timetable_timetable[]
  timetable_wishlist                    timetable_wishlist?

  @@index([department_id], map: "session_userprofile_department_id_fkey")
}

model session_userprofile_favorite_departments {
  id             Int                 @id @default(autoincrement())
  userprofile_id Int
  department_id  Int
  department     subject_department  @relation(fields: [department_id], references: [id], onUpdate: Restrict)
  userprofile    session_userprofile @relation(fields: [userprofile_id], references: [id], onUpdate: Restrict)

  @@unique([userprofile_id, department_id], map: "userprofile_id")
  @@index([department_id], map: "session_userprofile_favorite_departments_department_id_fkey")
}

model session_userprofile_majors {
  id                  Int                 @id @default(autoincrement())
  userprofile_id      Int
  department_id       Int
  session_userprofile session_userprofile @relation(fields: [userprofile_id], references: [id], onUpdate: Restrict, map: "session_userpr_userprofile_id_20f3742a_fk_session_userprofile_id")
  subject_department  subject_department  @relation(fields: [department_id], references: [id], onUpdate: Restrict, map: "session_userprof_department_id_db568678_fk_subject_department_id")

  @@unique([userprofile_id, department_id], map: "session_userprofile_majors_userprofile_id_12b76c49_uniq")
  @@index([department_id], map: "session_userprof_department_id_db568678_fk_subject_department_id")
}

model session_userprofile_minors {
  id                  Int                 @id @default(autoincrement())
  userprofile_id      Int
  department_id       Int
  session_userprofile session_userprofile @relation(fields: [userprofile_id], references: [id], onUpdate: Restrict, map: "session_userpr_userprofile_id_dad5ef83_fk_session_userprofile_id")
  subject_department  subject_department  @relation(fields: [department_id], references: [id], onUpdate: Restrict, map: "session_userprof_department_id_7a7ea3ed_fk_subject_department_id")

  @@unique([userprofile_id, department_id], map: "session_userprofile_minors_userprofile_id_d01e3e38_uniq")
  @@index([department_id], map: "session_userprof_department_id_7a7ea3ed_fk_subject_department_id")
}

model session_userprofile_specialized_major {
  id                  Int                 @id @default(autoincrement())
  userprofile_id      Int
  department_id       Int
  session_userprofile session_userprofile @relation(fields: [userprofile_id], references: [id], onUpdate: Restrict, map: "session_userpr_userprofile_id_ca859cbe_fk_session_userprofile_id")
  subject_department  subject_department  @relation(fields: [department_id], references: [id], onUpdate: Restrict, map: "session_userprof_department_id_919e11be_fk_subject_department_id")

  @@unique([userprofile_id, department_id], map: "session_userprofile_specialized_maj_userprofile_id_3951a553_uniq")
  @@index([department_id], map: "session_userprof_department_id_919e11be_fk_subject_department_id")
}

model session_userprofile_taken_lectures {
  id             Int                 @id @default(autoincrement())
  userprofile_id Int
  lecture_id     Int
  lecture        subject_lecture     @relation(fields: [lecture_id], references: [id], onUpdate: Restrict)
  userprofile    session_userprofile @relation(fields: [userprofile_id], references: [id], onUpdate: Restrict)

  @@unique([userprofile_id, lecture_id], map: "userprofile_id")
  @@index([lecture_id], map: "session_userprofile_taken_lectures_lecture_id_fkey")
}

model subject_classtime {
  id                    Int              @id @default(autoincrement())
  day                   Int              @db.SmallInt
  begin                 DateTime         @db.Time(0)
  end                   DateTime         @db.Time(0)
  type                  String           @db.VarChar(1)
  building_id           String?          @db.VarChar(10)
  building_full_name    String?          @db.VarChar(60)
  building_full_name_en String?          @db.VarChar(60)
  room_name             String?          @db.VarChar(20)
  unit_time             Int?             @db.SmallInt
  lecture_id            Int?
  subject_lecture       subject_lecture? @relation(fields: [lecture_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "subject_classtime_lecture_id_bf773e65_fk_subject_lecture_id")

  @@index([lecture_id], map: "subject_classtime_72a11f01")
}

model subject_course {
  id                                                                                                               Int                                        @id @default(autoincrement())
  old_code                                                                                                         String                                     @db.VarChar(10)
  department_id                                                                                                    Int
  type                                                                                                             String                                     @db.VarChar(12)
  type_en                                                                                                          String                                     @db.VarChar(36)
  title                                                                                                            String                                     @db.VarChar(100)
  title_en                                                                                                         String                                     @db.VarChar(200)
  summury                                                                                                          String                                     @db.VarChar(400)
  grade_sum                                                                                                        Float
  load_sum                                                                                                         Float
  speech_sum                                                                                                       Float
  review_total_weight                                                                                              Float
  grade                                                                                                            Float
  load                                                                                                             Float
  speech                                                                                                           Float
  latest_written_datetime                                                                                          DateTime?                                  @db.DateTime(0)
  title_en_no_space                                                                                                String                                     @db.VarChar(200)
  title_no_space                                                                                                   String                                     @db.VarChar(100)
  main_relatedcoursedailyuserfeed                                                                                  main_relatedcoursedailyuserfeed[]
  planner_futureplanneritem                                                                                        planner_futureplanneritem[]
  subject_department                                                                                               subject_department                         @relation(fields: [department_id], references: [id], onUpdate: Restrict)
  subject_course_related_courses_posterior_subject_course_related_courses_posterior_from_course_idTosubject_course subject_course_related_courses_posterior[] @relation("subject_course_related_courses_posterior_from_course_idTosubject_course")
  subject_course_related_courses_posterior_subject_course_related_courses_posterior_to_course_idTosubject_course   subject_course_related_courses_posterior[] @relation("subject_course_related_courses_posterior_to_course_idTosubject_course")
  subject_course_related_courses_prior_subject_course_related_courses_prior_from_course_idTosubject_course         subject_course_related_courses_prior[]     @relation("subject_course_related_courses_prior_from_course_idTosubject_course")
  subject_course_related_courses_prior_subject_course_related_courses_prior_to_course_idTosubject_course           subject_course_related_courses_prior[]     @relation("subject_course_related_courses_prior_to_course_idTosubject_course")
  subject_courseuser                                                                                               subject_courseuser[]
  subject_course_professors                                                                                        subject_course_professors[]
  lecture                                                                                                          subject_lecture[]

  @@index([department_id], map: "subject_course_department_id_fkey")
}

model subject_course_professors {
  id           Int               @id @default(autoincrement())
  course_id    Int
  professor_id Int
  course       subject_course    @relation(fields: [course_id], references: [id], onUpdate: Restrict)
  professor    subject_professor @relation(fields: [professor_id], references: [id], onUpdate: Restrict)

  @@unique([course_id, professor_id], map: "course_id")
}

model subject_course_related_courses_posterior {
  id                                                                                     Int            @id @default(autoincrement())
  from_course_id                                                                         Int
  to_course_id                                                                           Int
  subject_course_subject_course_related_courses_posterior_from_course_idTosubject_course subject_course @relation("subject_course_related_courses_posterior_from_course_idTosubject_course", fields: [from_course_id], references: [id], onUpdate: Restrict, map: "subject_course_relat_from_course_id_f520f461_fk_subject_c")
  subject_course_subject_course_related_courses_posterior_to_course_idTosubject_course   subject_course @relation("subject_course_related_courses_posterior_to_course_idTosubject_course", fields: [to_course_id], references: [id], onUpdate: Restrict, map: "subject_course_relat_to_course_id_5fbd4d28_fk_subject_c")

  @@unique([from_course_id, to_course_id], map: "subject_course_related_c_from_course_id_to_course_eaec2f22_uniq")
  @@index([to_course_id], map: "subject_course_relat_to_course_id_5fbd4d28_fk_subject_c")
}

model subject_course_related_courses_prior {
  id                                                                                 Int            @id @default(autoincrement())
  from_course_id                                                                     Int
  to_course_id                                                                       Int
  subject_course_subject_course_related_courses_prior_from_course_idTosubject_course subject_course @relation("subject_course_related_courses_prior_from_course_idTosubject_course", fields: [from_course_id], references: [id], onUpdate: Restrict, map: "subject_course_relat_from_course_id_e994f30a_fk_subject_c")
  subject_course_subject_course_related_courses_prior_to_course_idTosubject_course   subject_course @relation("subject_course_related_courses_prior_to_course_idTosubject_course", fields: [to_course_id], references: [id], onUpdate: Restrict, map: "subject_course_relat_to_course_id_52f44705_fk_subject_c")

  @@unique([from_course_id, to_course_id], map: "subject_course_related_c_from_course_id_to_course_74e1ae5f_uniq")
  @@index([to_course_id], map: "subject_course_relat_to_course_id_52f44705_fk_subject_c")
}

model subject_courseuser {
  id                   Int                 @id @default(autoincrement())
  latest_read_datetime DateTime            @db.DateTime(0)
  course_id            Int
  user_profile_id      Int
  subject_course       subject_course      @relation(fields: [course_id], references: [id], onUpdate: Restrict, map: "subject_courseuser_course_id_2e4ccc6e_fk_subject_course_id")
  session_userprofile  session_userprofile @relation(fields: [user_profile_id], references: [id], onUpdate: Restrict, map: "subject_courseuser_user_profile_id_4d15ef1b_fk_session_u")

  @@unique([course_id, user_profile_id], map: "subject_courseuser_course_id_a26ac0b3_uniq")
  @@index([user_profile_id], map: "subject_courseuser_user_profile_id_4d15ef1b_fk_session_u")
}

model subject_department {
  id                                       Int                                        @id
  num_id                                   String                                     @db.VarChar(4)
  code                                     String                                     @db.VarChar(5)
  name                                     String                                     @db.VarChar(60)
  name_en                                  String?                                    @db.VarChar(60)
  visible                                  Boolean
  graduation_additionaltrack               graduation_additionaltrack[]
  graduation_majortrack                    graduation_majortrack[]
  main_famousmajorreviewdailyfeed          main_famousmajorreviewdailyfeed[]
  planner_arbitraryplanneritem             planner_arbitraryplanneritem[]
  session_userprofile                      session_userprofile[]
  session_userprofile_favorite_departments session_userprofile_favorite_departments[]
  session_userprofile_majors               session_userprofile_majors[]
  session_userprofile_minors               session_userprofile_minors[]
  session_userprofile_specialized_major    session_userprofile_specialized_major[]
  subject_course                           subject_course[]
  subject_lecture                          subject_lecture[]
}

model subject_examtime {
  id              Int             @id @default(autoincrement())
  day             Int             @db.SmallInt
  begin           DateTime        @db.Time(0)
  end             DateTime        @db.Time(0)
  lecture_id      Int
  subject_lecture subject_lecture @relation(fields: [lecture_id], references: [id], onUpdate: Restrict, map: "subject_examtime_lecture_id_a35fa20c_fk_subject_lecture_id")

  @@index([lecture_id], map: "subject_examtime_72a11f01")
}

model subject_lecture {
  id                              Int                                  @id @default(autoincrement())
  code                            String                               @db.VarChar(10)
  old_code                        String                               @db.VarChar(10)
  year                            Int
  semester                        Int                                  @db.SmallInt
  department_id                   Int
  subject_department              subject_department                   @relation(fields: [department_id], references: [id], onUpdate: Restrict)
  class_no                        String                               @db.VarChar(4)
  title                           String                               @db.VarChar(100)
  title_en                        String                               @db.VarChar(200)
  type                            String                               @db.VarChar(12)
  type_en                         String                               @db.VarChar(36)
  audience                        Int
  credit                          Int
  title_en_no_space               String                               @db.VarChar(200)
  title_no_space                  String                               @db.VarChar(100)
  num_classes                     Int
  num_labs                        Int
  credit_au                       Int
  limit                           Int
  num_people                      Int?
  is_english                      Boolean
  deleted                         Boolean
  course_id                       Int
  course                          subject_course                       @relation(fields: [course_id], references: [id], onUpdate: Restrict)
  grade_sum                       Float
  load_sum                        Float
  speech_sum                      Float
  grade                           Float
  load                            Float
  speech                          Float
  review_total_weight             Float
  class_title                     String?                              @db.VarChar(100)
  class_title_en                  String?                              @db.VarChar(100)
  common_title                    String?                              @db.VarChar(100)
  common_title_en                 String?                              @db.VarChar(100)
  main_reviewwritedailyuserfeed   main_reviewwritedailyuserfeed[]
  planner_takenplanneritem        planner_takenplanneritem[]
  students                        session_userprofile_taken_lectures[]
  subject_classtime               subject_classtime[]
  subject_examtime                subject_examtime[]
  timetable_oldtimetable_lectures timetable_oldtimetable_lectures[]
  timetable_timetable_lectures    timetable_timetable_lectures[]
  timetable_wishlist_lectures     timetable_wishlist_lectures[]
  subject_lecture_professors      subject_lecture_professors[]

  @@index([deleted], map: "subject_lecture_deleted_bedc6156_uniq")
  @@index([type_en], map: "subject_lecture_type_en_45ee2d3a_uniq")
}

model subject_lecture_professors {
  id           Int @id @default(autoincrement())
  lecture_id   Int
  professor_id Int

  lecture   subject_lecture   @relation(fields: [lecture_id], references: [id], onUpdate: Restrict)
  professor subject_professor @relation(fields: [professor_id], references: [id], onUpdate: Restrict)

  @@unique([lecture_id, professor_id], map: "lecture_id")
}

model subject_professor {
  id                         Int                          @id @default(autoincrement())
  professor_name             String                       @db.VarChar(100)
  professor_name_en          String?                      @db.VarChar(100)
  professor_id               Int
  major                      String                       @db.VarChar(30)
  grade_sum                  Float
  load_sum                   Float
  speech_sum                 Float
  review_total_weight        Float
  grade                      Float
  load                       Float
  speech                     Float
  subject_course_professors  subject_course_professors[]
  subject_lecture_professors subject_lecture_professors[]
}

model subject_semester {
  id                            Int                          @id @default(autoincrement())
  year                          Int
  semester                      Int
  beginning                     DateTime                     @db.DateTime(0)
  end                           DateTime                     @db.DateTime(0)
  courseRegistrationPeriodStart DateTime?                    @db.DateTime(0)
  courseRegistrationPeriodEnd   DateTime?                    @db.DateTime(0)
  courseAddDropPeriodEnd        DateTime?                    @db.DateTime(0)
  courseDropDeadline            DateTime?                    @db.DateTime(0)
  courseEvaluationDeadline      DateTime?                    @db.DateTime(0)
  gradePosting                  DateTime?                    @db.DateTime(0)
  courseDesciptionSubmission    DateTime?                    @db.DateTime(0)
  main_rankedreviewdailyfeed    main_rankedreviewdailyfeed[]

  @@unique([year, semester], map: "subject_semester_year_680c861f_uniq")
  @@index([semester], map: "subject_semester_1b3810e0")
  @@index([year], map: "subject_semester_84cdc76c")
}

model support_notice {
  id         Int      @id @default(autoincrement())
  start_time DateTime @db.DateTime(0)
  end_time   DateTime @db.DateTime(0)
  title      String   @db.VarChar(100)
  content    String   @db.LongText
}

model support_rate {
  id                  Int                 @id @default(autoincrement())
  score               Int                 @db.SmallInt
  year                Int                 @db.SmallInt
  created_datetime    DateTime?           @db.DateTime(0)
  user_id             Int
  version             String              @db.VarChar(20)
  session_userprofile session_userprofile @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "support_rate_user_id_6d69ec9d_fk_session_userprofile_id")

  @@unique([user_id, year], map: "support_rate_user_id_year_a62fc7f7_uniq")
  @@index([created_datetime], map: "support_rate_created_datetime_d38a29eb")
}

model timetable_oldtimetable {
  id                              Int                               @id @default(autoincrement())
  student_id                      String                            @db.VarChar(10)
  year                            Int?
  semester                        Int?                              @db.SmallInt
  table_no                        Int?                              @db.SmallInt
  timetable_oldtimetable_lectures timetable_oldtimetable_lectures[]
}

model timetable_oldtimetable_lectures {
  id                     Int                    @id @default(autoincrement())
  oldtimetable_id        Int
  lecture_id             Int
  subject_lecture        subject_lecture        @relation(fields: [lecture_id], references: [id], onUpdate: Restrict, map: "timetable_oldtimetab_lecture_id_530c66bb_fk_subject_l")
  timetable_oldtimetable timetable_oldtimetable @relation(fields: [oldtimetable_id], references: [id], onUpdate: Restrict, map: "timetable_oldtimetab_oldtimetable_id_88e61f89_fk_timetable")

  @@unique([oldtimetable_id, lecture_id], map: "timetable_oldtimetable_lecture_oldtimetable_id_27bf3d09_uniq")
  @@index([lecture_id], map: "timetable_oldtimetable_lecture_id_b19d5300_fk_subject_lecture_id")
}

model timetable_timetable {
  id                           Int                            @id @default(autoincrement())
  year                         Int?
  semester                     Int?                           @db.SmallInt
  user_id                      Int
  arrange_order                Int                            @db.SmallInt
  session_userprofile          session_userprofile            @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "timetable_timetable_user_id_0d214170_fk_session_userprofile_id")
  timetable_timetable_lectures timetable_timetable_lectures[]

  @@index([arrange_order], map: "timetable_timetable_arrange_order_84c8935c")
  @@index([semester], map: "timetable_timetable_semester_d8ce5d37_uniq")
  @@index([user_id], map: "timetable_timetable_user_id_0d214170_fk_session_userprofile_id")
  @@index([year], map: "timetable_timetable_year_907cf59a_uniq")
}

model timetable_timetable_lectures {
  id                  Int                 @id @default(autoincrement())
  timetable_id        Int
  lecture_id          Int
  subject_lecture     subject_lecture     @relation(fields: [lecture_id], references: [id], onUpdate: Restrict, map: "timetable_timetable__lecture_id_0aa33315_fk_subject_l")
  timetable_timetable timetable_timetable @relation(fields: [timetable_id], references: [id], onUpdate: Restrict, map: "timetable_timetable__timetable_id_733ab103_fk_timetable")

  @@unique([timetable_id, lecture_id], map: "timetable_timetable_lecture_timetable_id_57195f56_uniq")
  @@index([lecture_id], map: "timetable_timetable_le_lecture_id_79aa5f2e_fk_subject_lecture_id")
}

model timetable_wishlist {
  id                          Int                           @id @default(autoincrement())
  user_id                     Int                           @unique(map: "user_id")
  session_userprofile         session_userprofile           @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "timetable_wishlist_user_id_d057a6e4_fk_session_userprofile_id")
  timetable_wishlist_lectures timetable_wishlist_lectures[]
}

model timetable_wishlist_lectures {
  id                 Int                @id @default(autoincrement())
  wishlist_id        Int
  lecture_id         Int
  subject_lecture    subject_lecture    @relation(fields: [lecture_id], references: [id], onUpdate: Restrict, map: "timetable_wishlist_lec_lecture_id_1ab5d523_fk_subject_lecture_id")
  timetable_wishlist timetable_wishlist @relation(fields: [wishlist_id], references: [id], onUpdate: Restrict, map: "timetable_wishlist_wishlist_id_efc7ae12_fk_timetable_wishlist_id")

  @@unique([wishlist_id, lecture_id], map: "timetable_wishlist_lectures_wishlist_id_e4c47efe_uniq")
  @@index([lecture_id], map: "timetable_wishlist_lec_lecture_id_1ab5d523_fk_subject_lecture_id")
}

model graduation_additionaltrack {
  id                                Int                                 @id @default(autoincrement())
  start_year                        Int
  end_year                          Int
  type                              String                              @db.VarChar(32)
  major_required                    Int
  major_elective                    Int
  department_id                     Int?
  subject_department                subject_department?                 @relation(fields: [department_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "graduation_additiona_department_id_788c5289_fk_subject_d")
  planner_planner_additional_tracks planner_planner_additional_tracks[]

  @@unique([end_year, type, department_id], map: "graduation_additionaltra_end_year_type_department_9d873c1b_uniq")
  @@unique([start_year, type, department_id], map: "graduation_additionaltra_start_year_type_departme_763552eb_uniq")
  @@index([department_id], map: "graduation_additiona_department_id_788c5289_fk_subject_d")
  @@index([end_year], map: "graduation_additionaltrack_end_year_6af1030b")
  @@index([start_year], map: "graduation_additionaltrack_start_year_7a87318d")
  @@index([type], map: "graduation_additionaltrack_type_0fa38fc5")
}

model graduation_generaltrack {
  id                       Int               @id @default(autoincrement())
  start_year               Int
  end_year                 Int
  is_foreign               Boolean
  total_credit             Int
  total_au                 Int
  basic_required           Int
  basic_elective           Int
  thesis_study             Int
  thesis_study_doublemajor Int
  general_required_credit  Int
  general_required_au      Int
  humanities               Int
  humanities_doublemajor   Int
  planner_planner          planner_planner[]

  @@unique([end_year, is_foreign], map: "graduation_generaltrack_end_year_is_foreign_1f062f8b_uniq")
  @@unique([start_year, is_foreign], map: "graduation_generaltrack_start_year_is_foreign_c1eb425f_uniq")
  @@index([end_year], map: "graduation_generaltrack_end_year_3bba699e")
  @@index([is_foreign], map: "graduation_generaltrack_is_foreign_d38919a2")
  @@index([start_year], map: "graduation_generaltrack_start_year_00aee782")
}

model graduation_majortrack {
  id                         Int                @id @default(autoincrement())
  start_year                 Int
  end_year                   Int
  basic_elective_doublemajor Int
  major_required             Int
  major_elective             Int
  department_id              Int
  subject_department         subject_department @relation(fields: [department_id], references: [id], onUpdate: Restrict, map: "graduation_majortrac_department_id_81bfc8fa_fk_subject_d")
  planner_planner            planner_planner[]

  @@unique([end_year, department_id], map: "graduation_majortrack_end_year_department_id_b3ef1bc8_uniq")
  @@unique([start_year, department_id], map: "graduation_majortrack_start_year_department_id_59122c6d_uniq")
  @@index([department_id], map: "graduation_majortrac_department_id_81bfc8fa_fk_subject_d")
  @@index([end_year], map: "graduation_majortrack_end_year_57017559")
  @@index([start_year], map: "graduation_majortrack_start_year_6281dc28")
}

model planner_arbitraryplanneritem {
  id                 Int                 @id @default(autoincrement())
  is_excluded        Boolean
  year               Int
  semester           Int
  type               String              @db.VarChar(12)
  type_en            String              @db.VarChar(36)
  credit             Int
  credit_au          Int
  department_id      Int?
  planner_id         Int
  subject_department subject_department? @relation(fields: [department_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "planner_arbitrarypla_department_id_0dc7ce25_fk_subject_d")
  planner_planner    planner_planner     @relation(fields: [planner_id], references: [id], onUpdate: Restrict, map: "planner_arbitrarypla_planner_id_d6069d2c_fk_planner_p")

  @@index([department_id], map: "planner_arbitrarypla_department_id_0dc7ce25_fk_subject_d")
  @@index([planner_id], map: "planner_arbitrarypla_planner_id_d6069d2c_fk_planner_p")
  @@index([semester], map: "planner_arbitraryplanneritem_semester_7508baa5")
  @@index([year], map: "planner_arbitraryplanneritem_year_5a0c7252")
}

model planner_futureplanneritem {
  id              Int             @id @default(autoincrement())
  is_excluded     Boolean
  year            Int
  semester        Int
  course_id       Int
  planner_id      Int
  subject_course  subject_course  @relation(fields: [course_id], references: [id], onUpdate: Restrict, map: "planner_futureplanne_course_id_b1a06444_fk_subject_c")
  planner_planner planner_planner @relation(fields: [planner_id], references: [id], onUpdate: Restrict, map: "planner_futureplanne_planner_id_dfd70193_fk_planner_p")

  @@index([course_id], map: "planner_futureplanne_course_id_b1a06444_fk_subject_c")
  @@index([planner_id], map: "planner_futureplanne_planner_id_dfd70193_fk_planner_p")
  @@index([semester], map: "planner_futureplanneritem_semester_cda6512e")
  @@index([year], map: "planner_futureplanneritem_year_5e3a2d4e")
}

model planner_planner {
  id                                Int                                 @id @default(autoincrement())
  start_year                        Int
  end_year                          Int
  arrange_order                     Int                                 @db.SmallInt
  general_track_id                  Int
  major_track_id                    Int
  user_id                           Int
  planner_arbitraryplanneritem      planner_arbitraryplanneritem[]
  planner_futureplanneritem         planner_futureplanneritem[]
  graduation_generaltrack           graduation_generaltrack             @relation(fields: [general_track_id], references: [id], onUpdate: Restrict, map: "planner_planner_general_track_id_6d607973_fk_graduatio")
  graduation_majortrack             graduation_majortrack               @relation(fields: [major_track_id], references: [id], onUpdate: Restrict, map: "planner_planner_major_track_id_9f7204bd_fk_graduatio")
  session_userprofile               session_userprofile                 @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "planner_planner_user_id_17740247_fk_session_userprofile_id")
  planner_planner_additional_tracks planner_planner_additional_tracks[]
  planner_takenplanneritem          planner_takenplanneritem[]

  @@index([arrange_order], map: "planner_planner_arrange_order_e50a3044")
  @@index([end_year], map: "planner_planner_end_year_e5fab7f3")
  @@index([general_track_id], map: "planner_planner_general_track_id_6d607973_fk_graduatio")
  @@index([major_track_id], map: "planner_planner_major_track_id_9f7204bd_fk_graduatio")
  @@index([start_year], map: "planner_planner_start_year_463173f3")
  @@index([user_id], map: "planner_planner_user_id_17740247_fk_session_userprofile_id")
}

model planner_planner_additional_tracks {
  id                         Int                        @id @default(autoincrement())
  planner_id                 Int
  additionaltrack_id         Int
  graduation_additionaltrack graduation_additionaltrack @relation(fields: [additionaltrack_id], references: [id], onUpdate: Restrict, map: "planner_planner_addi_additionaltrack_id_c46b8c4e_fk_graduatio")
  planner_planner            planner_planner            @relation(fields: [planner_id], references: [id], onUpdate: Restrict, map: "planner_planner_addi_planner_id_e439a309_fk_planner_p")

  @@unique([planner_id, additionaltrack_id], map: "planner_planner_addition_planner_id_additionaltra_2298c5cd_uniq")
  @@index([additionaltrack_id], map: "planner_planner_addi_additionaltrack_id_c46b8c4e_fk_graduatio")
}

model planner_takenplanneritem {
  id              Int             @id @default(autoincrement())
  is_excluded     Boolean
  lecture_id      Int
  planner_id      Int
  subject_lecture subject_lecture @relation(fields: [lecture_id], references: [id], onUpdate: Restrict, map: "planner_takenplanner_lecture_id_9b2d30d8_fk_subject_l")
  planner_planner planner_planner @relation(fields: [planner_id], references: [id], onUpdate: Restrict, map: "planner_takenplanner_planner_id_b725ff83_fk_planner_p")

  @@unique([planner_id, lecture_id], map: "planner_takenplanneritem_planner_id_lecture_id_4b39b432_uniq")
  @@index([lecture_id], map: "planner_takenplanner_lecture_id_9b2d30d8_fk_subject_l")
}
